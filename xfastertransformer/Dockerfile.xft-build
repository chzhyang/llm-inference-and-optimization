ARG UBUNTU_VER=22.04
FROM ubuntu:${UBUNTU_VER}

ENV LANG C.UTF-8
# ENV http_proxy http://proxy-prc.intel.com:911
# ENV https_proxy http://proxy-prc.intel.com:912
# ENV no_proxy localhost,127.0.0.1,*.intel.com

SHELL ["/bin/bash", "--login", "-c"]

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends --fix-missing \
    autoconf \
    build-essential \
    gcc-12 \
    g++-12 \
    make \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libnuma-dev \
    numactl \
    time \
    git \
    wget \
    vim \
    pkg-config \
    software-properties-common \
    zlib1g-dev \
    libssl-dev \
    libffi-dev \
    libbz2-dev \
    && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 60 \
    && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 60 \
    && rm -rf /var/lib/apt/lists/*

RUN git clone https://github.com/oneapi-src/oneCCL.git /tmp/oneCCL
WORKDIR /tmp/oneCCL
RUN git checkout 2021.10 \
    && sed -i 's/cpu_gpu_dpcpp/./g' cmake/templates/oneCCLConfig.cmake.in \
    && mkdir build
WORKDIR /tmp/oneCCL/build
RUN cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local/oneCCL \
    && make -j install 
RUN echo "source /usr/local/oneCCL/env/setvars.sh" >> ~/.bashrc
WORKDIR /usr/local/
RUN rm -rf /tmp/oneCCL

# RUN wget -q https://github.com/oneapi-src/oneDNN/releases/download/v0.21/mklml_lnx_2019.0.5.20190502.tgz \
#     && tar -xzf mklml_lnx_2019.0.5.20190502.tgz \
#     && rm -f mklml_lnx_2019.0.5.20190502.tgz
COPY mklml_lnx_2019.0.5.20190502.tgz .
RUN tar -xzf mklml_lnx_2019.0.5.20190502.tgz \
    && rm -f mklml_lnx_2019.0.5.20190502.tgz
RUN echo "export LD_LIBRARY_PATH=/usr/local/mklml_lnx_2019.0.5.20190502/lib:\$LD_LIBRARY_PATH" >> /root/.bashrc

WORKDIR /app
# Install and config conda
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh --no-check-certificate -O /tmp/miniconda.sh && \
    /bin/bash /tmp/miniconda.sh -b -p /opt/miniconda3 && \
    rm /tmp/miniconda.sh
ENV PATH /opt/miniconda3/bin:$PATH
# RUN conda init bash
RUN conda create -n llmenv python=3.9 pip -y
# Make RUN commands use the new environment:
RUN echo "conda activate xft" >> ~/.bashrc
SHELL ["conda", "run", "-n", "xft", "/bin/bash", "-c"]

COPY ./requirements.txt ./
# custom xft source
COPY /home/ge/xFasterTransformers /app/xFasterTransformers
SHELL ["conda", "run", "-n", "xft", "/bin/bash", "-c", "python", "-m", "pip", "install", "-f", "./requirements.txt"]
RUN ln -s /opt/miniconda3/envs/xft/lib/python3.9/site-packages/cmake/data/bin/cmake /usr/bin/cmake
WORKDIR /app/xFasterTransformers
s